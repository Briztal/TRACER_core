/*
  auto_mod.h Part of TRACER

  Copyright (c) 2018 RaphaÃ«l Outhier

  TRACER is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, either version 3 of the License, or
  (at your option) any later version.

  TRACER is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  aint32_t with TRACER.  If not, see <http://www.gnu.org/licenses/>.

*/

#ifndef TRACER_AUTO_MOD_H
#define TRACER_AUTO_MOD_H

#include <stdbool.h>




/*
 * There are different types of modules. Some may be loaded automatically by the kernel when it completed its
 * 	initialisation. This concerns for example hardware drivers;
 *
 * 	These modules will be stored in flash at a particular section. Macros defined below accomplish that procedure;
 */

struct mod_hook {

	/*The module's name;*/
	const char *const name;

	/*The module's initialisation function;*/
	bool (*const init)();


};


#define PROC_MODULE ".kernel_proc_modules"

#define SYSTEM_MODULE ".kernel_system_modules"

#define PERIPHERAL_MODULE ".kernel_peripheral_modules"

#define KERNEL_MODULE ".kernel_kernel_modules"

#define USER_MODULE ".kernel_user_modules"


#define MOD_ST(x) #x


#define KERNEL_HOOK_MODULE(module_type, name_l,  init_f)\
	static struct mod_hook name_l __attribute__((section (module_type), used)) = \
	{.name = MOD_ST(name_l), .init = (init_f),};


#endif /*TRACER_AUTO_MOD_H*/
